@model Biblioteka.Models.Book

@{
    ViewBag.Title = "BookAdd";
}




@using (Html.BeginForm("Add", "Book", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" style="margin-left:auto;margin-right:auto;overflow:auto;width:70%;">
    <h4>Book @Html.DisplayFor(model => model.BookID, new { htmlAttributes = new { @class = "form-control" } })</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-10">
        <p>Podaj autora/ów</p>
        <input name="author" type="text" id="input-author-selectized" required>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CategoryID, new SelectList(ViewBag.kategorie, "Value", "Text", Model.CategoryID))
            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pages, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Pages, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Pages, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
     Podaj liczbę książek
        <div class="col-md-10">
           <input name="amount" type="number"  placeholder="1" value=1 required/>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.for_who_string, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.for_who_string, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.EnumDropDownListFor(model => model.For_who, "dla kogo?", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.for_who_string, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-10">
        <p>Podaj tagi</p>
        <input name="tag" type="text" id="input-tags-selectized">
    </div>

    <div class="col-md-10">
        <p>Dodaj Obrazek</p>
        <input type="file" name="file1" class="danger-color-dark" />
        <p>Dodaj spis treści</p>
        <input type="file" name="file2" class="danger-color-dark" />
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Dodaj" class="btn btn-default" />
        </div>
    </div>



</div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Content/Selectize/js/standalone/selectize.js"></script>
<script>
    $('#input-tags-selectized').selectize({
        delimiter: ',',
        persist: false,
        create: function (input) {
            return {
                value: input,
                text: input
            }
        }
    });
</script>

<script>
    $('#input-tags-selectized').selectize({
        delimiter: ',',
        persist: false,
        create: function (input) {
            return {
                value: input,
                text: input
            }
        }
    });
</script>
<script>
    $('#input-author-selectized').selectize({
        delimiter: ',',
        persist: false,
        create: function (input) {
            return {
                value: input,
                text: input
            }
        }
    });
</script>
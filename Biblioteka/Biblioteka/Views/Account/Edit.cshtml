@model Biblioteka.Models.Account
@{
    ViewBag.Title = "Edit";
}

<h2>Edycja</h2>

<div>
    <div id="inner">
        @using (Html.BeginForm("Edit", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Czytelnik</h4>
            <hr />
            @Html.ValidationSummary(true)
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.AccountID)
                    @Html.ValueFor(model => model.AccountID)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Podaj imię" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", placeholder = "Podaj nazwisko" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Pesel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pesel, new { htmlAttributes = new { @class = "form-control", placeholder = "Podaj pesel" } })
                    @Html.ValidationMessageFor(model => model.Pesel, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Podaj email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control", placeholder = "Podaj login" } })
                    @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Podaj hasło" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Confirmedpassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Confirmedpassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Potwierdź hasło" } })
                    @Html.ValidationMessageFor(model => model.Confirmedpassword, "", new { @class = "text-danger" })
                </div>
            </div>
            @*jeżeli id zalogowane to admin to wtedy pozwól na zmienie*@
            <div class="form-group">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.Active)
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                   
                   @* @Html.DropDownList("MyType", EnumHelper.GetSelectList(typeof(Account.Role)), "Select My Type", new { @class = "form-control" })*@
                    @Html.EnumDropDownListFor(x => x.Role, "Zmień rolę", new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                   
                    <input type="submit" value="Edytuj" class="btn btn-default"  />
                    <input type="reset" value="Resetuj" class="btn btn-default" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @ViewBag.Succesmessage
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @ViewBag.DuplicateMessage
                </div>
            </div>
        </div>
        }
    </div>
</div>
<div>
    @Html.ActionLink("Wróć", "Index", null, new { @class = "backtolist" })
</div>